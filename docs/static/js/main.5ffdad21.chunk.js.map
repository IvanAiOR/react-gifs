{"version":3,"sources":["componentes/AddCategory.js","componentes/GridItem.js","helpers/GetImagenes.js","componentes/GridImagenes.js","hooks/useFetchGifs.js","componentes/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","NuevaCategoria","SetNuevaCategoria","onSubmit","e","preventDefault","console","log","categorias","type","value","onChange","target","GridItem","url","title","id","className","src","alt","getGifs","categoria","a","fetch","respuesta","json","data","urlGifs","map","img","images","downsized_medium","GridImagenes","loading","state","setstate","useEffect","then","useFetchGifs","Gif","key","GifExpertApp","indice","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACAC,mBAAS,4BADT,mBACrCC,EADqC,KACrBC,EADqB,KAsB5C,OACI,0BAAMC,SAfW,SAACC,GAElBA,EAAEC,iBACmB,KAAjBJ,IAIAK,QAAQC,IAAIN,GACZF,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAsBO,QAElDN,GAAkB,iBAAI,QAMlB,qDACA,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAzBc,SAACP,GACvBF,EAAkBE,EAAEQ,OAAOF,UA0BvB,6BACA,4BAAQD,KAAK,UAAb,aChCCI,EAAW,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,MAAe,EAARC,GAClC,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAKJ,EAAKK,IAAKJ,IACpB,2BAAIA,K,uBCJAK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACtBhB,QAAQC,IAAI,4BAA4Bc,GAClCP,EAFgB,iDAE8BO,EAF9B,+DAKCE,MAAMT,GALP,cAKhBU,EALgB,gBAMDA,EAAUC,OANT,uBAMfC,EANe,EAMfA,KAGDC,EAAUD,EAAKE,KAAI,SAAAC,GACrB,MACI,CACIb,GAAGa,EAAIb,GACPD,MAAOc,EAAId,MACXD,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAI7CR,QAAQC,IAAIoB,GAlBU,kBAmBfA,GAnBe,4CAAH,sDCGTK,EAAe,SAAC,GAAiB,IAAhBX,EAAe,EAAfA,UAAe,ECFlB,SAACA,GAAe,IAAD,EACbrB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAcvC,OARAC,qBAAU,WACNhB,EAAQC,GAAWgB,MAAK,SAAAV,GACpBQ,EAAS,CACLT,KAAMC,EAASM,SAAS,SAGlC,IAEKC,EDRkBI,CAAajB,GAA1BkB,EAJ8B,EAInCb,KAASO,EAJ0B,EAI1BA,QAIhB,OACI,oCAEI,4BAAKZ,GACL,yBAAKJ,UAAU,aACVgB,GAAW,2CAERM,EAAIX,KACA,SAACC,GAAD,OACI,kBACI,EADJ,eAEIW,IAAKX,EAAIb,IACLa,UErBvBY,EAAe,WAAM,MAEEzC,mBAAS,CAAC,cAFZ,mBAE3BQ,EAF2B,KAEfT,EAFe,KAMlC,OACQ,6BACI,4CACA,6BAGA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAGQS,EAAWoB,KACP,SAACP,EAAUqB,GAEP,OADApC,QAAQC,IAAI,+BAA+Bc,GAEvC,kBACI,EADJ,CAEIA,UAAWA,EACXmB,IAAKnB,UCrBzCsB,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5ffdad21.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [NuevaCategoria, SetNuevaCategoria] = useState(\"Ingresa una categorÃ­a\")\r\n\r\n    const handleNewCategory = (e)=>{\r\n        SetNuevaCategoria(e.target.value)\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        \r\n        e.preventDefault();\r\n        if (NuevaCategoria==='') {\r\n            \r\n        }\r\n        else{\r\n            console.log(NuevaCategoria)\r\n            setCategorias(categorias=>[NuevaCategoria, ...categorias, ]);\r\n        }\r\n        SetNuevaCategoria(()=>'');\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Ingresa una categoria</h3>\r\n            <input \r\n                type=\"text\"\r\n                value={NuevaCategoria}\r\n                onChange={handleNewCategory}\r\n            />\r\n            <br/>\r\n            <button type=\"submit\">Agregar</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes= {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridItem = ({url, title, id}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport    const getGifs = async(categoria)=> {\r\n    console.log('categoria en grid imagen:',categoria)\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${categoria}&api_key=LuB38YvUHKLgeTS8XchkLY8oFTDmJi6P&limit=10`;\r\n    \r\n        \r\n    const respuesta= await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    //console.log(data);\r\n\r\n    const urlGifs = data.map(img=>{\r\n        return(\r\n            {\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        )   \r\n    });\r\n    console.log(urlGifs);\r\n    return urlGifs\r\n    \r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GridItem } from './GridItem';\r\nimport { getGifs } from '../helpers/GetImagenes';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport  const GridImagenes = ({categoria}) => {\r\n\r\n    \r\n   \r\n    const {data:Gif,loading}=useFetchGifs(categoria);\r\n \r\n    \r\n    \r\n    return (\r\n        <>\r\n        \r\n            <h3>{categoria}</h3>\r\n            <div className=\"card-grid\">\r\n                {loading && <h5>Cargando...</h5>}\r\n                {\r\n                    Gif.map(\r\n                        (img)=>(\r\n                            <\r\n                                GridItem    \r\n                                key={img.id}\r\n                                {...img}\r\n\r\n                            />\r\n                        )\r\n                        \r\n                    )\r\n                }\r\n                \r\n                \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/GetImagenes\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(categoria).then(urlGifs=>{\r\n            setstate({\r\n                data: urlGifs, loading :false\r\n            }); \r\n        });\r\n    },[]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GridImagenes } from './GridImagenes';\r\n\r\nexport const GifExpertApp = () => {\r\n// const categorias =[`Gatos`, `perros`, `Anime`]\r\nconst [categorias, setCategorias] = useState(['One punch'])\r\n    \r\n\r\n\r\nreturn (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n\r\n            {/* <AddCategory /> */}\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <ol>\r\n                {\r\n                    \r\n                    categorias.map(\r\n                        (categoria,indice)=>{\r\n                            console.log('categoria en gridexpertapp: ',categoria)\r\n                            return(\r\n                                <\r\n                                    GridImagenes \r\n                                    categoria={categoria}\r\n                                    key={categoria}\r\n                                />\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './componentes/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}